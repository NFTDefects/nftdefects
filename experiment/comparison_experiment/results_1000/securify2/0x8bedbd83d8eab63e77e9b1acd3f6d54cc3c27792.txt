pragma directive defines a prior version to 0.8.7. Changing pragma version to 0.8.7....
Traceback (most recent call last):
  File "/GPUFS/sysu_zbzheng_1/sujzh3/mythril-develop/venv/bin/securify", line 33, in <module>
    sys.exit(load_entry_point('securify', 'console_scripts', 'securify')())
  File "/sec/securify/__main__.py", line 277, in main
    matches.extend(pattern.find_matches())
  File "/sec/securify/analyses/patterns/ast/too_many_digits_pattern.py", line 17, in find_matches
    ast_root = self.get_ast_root()
  File "/sec/securify/analyses/patterns/ast/abstract_ast_pattern.py", line 18, in get_ast_root
    ast_root = self.analysis_context.ast
  File "/sec/securify/analyses/analysis.py", line 74, in ast
    self._ast = self.config.ast_compiler(self)
  File "/sec/securify/__main__.py", line 253, in <lambda>
    ast_compiler=lambda t: solidity_ast_compiler.compile_ast(t.source_file),
  File "/sec/securify/solidity/solidity_ast_compiler.py", line 31, in compile_ast
    compile_output = compile_standard(compile_input, allow_paths='/')
  File "/GPUFS/sysu_zbzheng_1/sujzh3/mythril-develop/venv/lib/python3.8/site-packages/solc/main.py", line 175, in compile_standard
    raise SolcError(
solc.exceptions.SolcError: ParserError: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function definition.
    --> fixed_pragma.sol:1838:1:
     |
1838 | {
     | ^


        > command: `solc --allow-paths / --standard-json`
        > return code: `0`
        > stderr:
        {"errors":[{"component":"general","errorCode":"7858","formattedMessage":"ParserError: Expected pragma, import directive or contract/interface/library/struct/enum/constant/function definition.\n    --> fixed_pragma.sol:1838:1:\n     |\n1838 | {\n     | ^\n\n","message":"Expected pragma, import directive or contract/interface/library/struct/enum/constant/function definition.","severity":"error","sourceLocation":{"end":56476,"file":"fixed_pragma.sol","start":56475},"type":"ParserError"}],"sources":{}}

        > stdout:
